# Redis Stack Configuration for Vector Database
# Optimized for batch training service vector storage

# Basic Redis Configuration
port 6379
bind 0.0.0.0
protected-mode no
timeout 0
tcp-keepalive 300

# Memory and Performance Configuration
maxmemory 2gb
maxmemory-policy allkeys-lru
maxmemory-samples 5

# Persistence Configuration
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb
dir /data

# Append Only File Configuration
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Logging Configuration
loglevel notice
logfile /data/redis-stack.log

# Client Configuration
maxclients 10000

# Slow Log Configuration
slowlog-log-slower-than 10000
slowlog-max-len 128

# Redis Stack Modules (automatically loaded in redis-stack-server)
# These modules are pre-loaded in the Redis Stack image:
# - RedisSearch (for vector search)
# - RedisJSON (for JSON operations)
# - RedisTimeSeries (for time series data)
# - RedisBloom (for probabilistic data structures)

# Vector Search Specific Configuration
# Note: These are example configurations - actual module parameters
# may vary based on Redis Stack version

# Memory allocation for search operations
# This affects vector indexing and search performance
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# Set configuration for better vector storage
set-max-intset-entries 512

# List configuration for batch operations
list-max-ziplist-size -2
list-compress-depth 0

# Network and Connection Configuration
tcp-backlog 511
unixsocket /tmp/redis.sock
unixsocketperm 700

# Security Configuration (disabled for development)
# Enable these in production:
# requirepass your_secure_password
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command DEBUG ""

# Performance Tuning for Vector Operations
# Increase these values for better performance with large vector datasets
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Background saving configuration
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes

# Replication configuration (for production clusters)
# replica-serve-stale-data yes
# replica-read-only yes

# Lua scripting configuration
lua-time-limit 5000

# Event notification configuration
notify-keyspace-events ""

# Advanced memory management
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# HyperLogLog configuration
hll-sparse-max-bytes 3000

# Streams configuration (useful for vector data pipelines)
stream-node-max-bytes 4096
stream-node-max-entries 100

# Configuration for better vector database performance
# These settings optimize Redis for vector storage and retrieval
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no

# Jemalloc configuration for better memory management
# jemalloc-bg-thread yes

# Disable some commands that might interfere with vector operations
# rename-command SHUTDOWN SHUTDOWN_VECTOR_DB
# rename-command CONFIG CONFIG_VECTOR_DB

# Enable keyspace notifications for vector monitoring (optional)
# notify-keyspace-events "Ex"

# Latency monitoring
latency-monitor-threshold 100

# Memory usage optimization for vector data
# These settings help with memory efficiency when storing large numbers of vectors
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# Additional performance settings for vector workloads
# Increase these for better performance with large datasets
maxmemory-samples 5
timeout 0
tcp-keepalive 300

# Enable automatic memory defragmentation (Redis 4.0+)
# activedefrag yes
# active-defrag-ignore-bytes 100mb
# active-defrag-threshold-lower 10
# active-defrag-threshold-upper 100
# active-defrag-cycle-min 5
# active-defrag-cycle-max 75
