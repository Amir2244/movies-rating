apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-worker
  labels:
    app: spark-worker
spec:
  replicas: 3  # As per requirement, we need 3 worker replicas
  selector:
    matchLabels:
      app: spark-worker
  template:
    metadata:
      labels:
        app: spark-worker
    spec:
      containers:
      - name: spark-worker
        image: bde2020/spark-worker
        env:
        - name: SPARK_MASTER_URL
          value: spark://spark-master:7077
        - name: SPARK_WORKER_CORES
          value: "6"
        - name: SPARK_WORKER_MEMORY
          value: "6g"
        - name: CORE_CONF_fs_defaultFS
          value: hdfs://namenode:8020
        volumeMounts:
        - name: spark-worker-app-logs
          mountPath: /opt/spark-apps/logs
        - name: spark-worker-daemon-logs
          mountPath: /opt/spark/logs
      volumes:
      - name: spark-worker-app-logs
        persistentVolumeClaim:
          claimName: spark-worker-app-logs-pvc
      - name: spark-worker-daemon-logs
        persistentVolumeClaim:
          claimName: spark-worker-daemon-logs-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: spark-worker-app-logs-pvc
spec:
  accessModes:
    - ReadWriteMany  # Changed to ReadWriteMany since multiple pods will access it
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: spark-worker-daemon-logs-pvc
spec:
  accessModes:
    - ReadWriteMany  # Changed to ReadWriteMany since multiple pods will access it
  resources:
    requests:
      storage: 1Gi