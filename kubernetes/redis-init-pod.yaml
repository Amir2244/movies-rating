apiVersion: v1
kind: Pod
metadata:
  annotations:
    kompose.cmd: C:\Users\HP\Documents\FifthYear\Project\movies-rating\kubernetes\kompose.exe -f C:\Users\HP\Documents\FifthYear\Project\movies-rating\docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: redis-init
  name: redis-init
  namespace: movies-rating
spec:
  containers:
    - args:
        - sh
        - -c
        - |2
            echo 'Waiting for Redis to be ready...' &&
            until redis-cli -h redis ping; do
              echo 'Redis is unavailable - sleeping' &&
              sleep 1
            done &&
            echo 'Redis is ready! Initializing vector database...' &&

            echo 'Creating user factors vector index...' &&
            redis-cli -h redis FT.CREATE user_factors_idx ON HASH PREFIX 1 'vector:user:' SCHEMA userId NUMERIC SORTABLE vector VECTOR FLAT 6 TYPE FLOAT32 DIM 50 DISTANCE_METRIC COSINE timestamp NUMERIC SORTABLE modelVersion TAG &&

            echo 'Creating item factors vector index...' &&
            redis-cli -h redis FT.CREATE item_factors_idx ON HASH PREFIX 1 'vector:item:' SCHEMA itemId NUMERIC SORTABLE vector VECTOR FLAT 6 TYPE FLOAT32 DIM 50 DISTANCE_METRIC COSINE timestamp NUMERIC SORTABLE modelVersion TAG &&

            echo 'Creating movie metadata index...' &&
            redis-cli -h redis FT.CREATE movie_metadata_idx ON HASH PREFIX 1 'movie:' SCHEMA movieId NUMERIC SORTABLE title TEXT SORTABLE genres TAG SEPARATOR '|' year NUMERIC SORTABLE &&

            echo 'Creating user recommendations cache index...' &&
            redis-cli -h redis FT.CREATE user_recommendations_idx ON HASH PREFIX 1 'user_rec:' SCHEMA userId NUMERIC SORTABLE movieId NUMERIC SORTABLE rating NUMERIC SORTABLE timestamp NUMERIC SORTABLE modelVersion TAG &&

            echo 'Vector database initialization completed!' &&
            redis-cli -h redis FT._LIST
      image: redis/redis-stack:latest
      name: redis-init
      resources:
        requests:
          memory: "512Mi"
          cpu: "500m"
        limits:
          memory: "1Gi"
          cpu: "1000m"
      volumeMounts:
        - mountPath: /scripts
          name: redis-init-cm0
          readOnly: true
  restartPolicy: Never
  volumes:
    - configMap:
        name: redis-init-cm0
      name: redis-init-cm0
